= render :partial => "layouts/sub_heading", :locals => {:object => 'Profile'}
.row.user-statistic.highlight
  .col-md-5.col-xs-5.user-info
    %span.avatar
      = image_tag @student.avatar.url(:medium), alt: t('common.image.alt') ,class: 'img-circle profile-img'
    %ul
      %li.name 
        = @student.username
      %li.email
        %i.fa.fa-envelope
        = @student.email
  .col-md-7.col-xs-7.user-post-count
    .row
      .col-md-4.col-xs-4.question-cat
        - if @student.badges.last.blank?
          %span.user-badge
        - else
          %span.user-badge{style: "background-color: #{ @student.badges.last.color}"}
            = @student.badges.last.name
        %br
          %span.points-count
            -if @student.points.nil?
              0 
            -else
              = @student.points
          %span.star
            %i.fa.fa-star
            %br
              points
      .col-md-4.col-xs-4
        %p.questions-count
          Questions
          %br
            %span 
              = @student.questions.count
      .col-md-4.col-xs-4
        %p.answers-count
          Answers
          %br
            %span 
              = @student.answers.count
      .single-head
      .col-md-4.col-xs-4
      .col-md-4.col-xs-4
        %p.questions-count
          Up Votes
          %br
            - if @total_likes == 0 
              %span 
                0
            - else 
              %span 
                = @total_likes
      .col-md-4.col-xs-4
        %p.answers-count
          Down Votes
          %br
            - if @total_dislikes == 0 
              %span 
                0
            - else 
              %span 
                = @total_dislikes
/ END USER-STATISTIC
.row.question-filter
  - if ( @student == current_user )
    = render partial: 'current_student_links', locals: { student: @student}
  - else
    .col-md-12.sort-questions
      %ul
        %li
          = link_to t('common.links.basic_info'), student_views_profile_path(@student.id, active_tab: t('students.active_tab.basic_info')), class: "#{profile_active_tab(t('students.active_tab.basic_info'))}"
        %li
          = link_to t('common.links.question'), student_views_profile_path(@student.id, active_tab: t('students.active_tab.questions')), class: "#{profile_active_tab(t('students.active_tab.questions'))}"
        %li
          = link_to t('common.links.answers'), student_views_profile_path(@student.id, active_tab: t('students.active_tab.answers')), class: "#{profile_active_tab(t('students.active_tab.answers'))}"
        %li
          = link_to t('common.links.bookmarks'), student_views_profile_path(@student.id, active_tab: t('students.active_tab.bookmarks')), class: "#{profile_active_tab(t('students.active_tab.bookmarks'))}"
        %li
          = link_to t('common.links.tags'), student_views_profile_path(@student.id, active_tab: t('students.active_tab.tags')), class: "#{profile_active_tab(t('students.active_tab.tags'))}"
        %li
          = link_to 'Badges', student_views_profile_path(@student.id, active_tab:'badges'), class: "#{profile_active_tab('badges')}"
  / END QUESTIONS-FILTER
- if params[:active_tab] == t('students.active_tab.answers')
  .main-questions-list
    %ul#main_questions_list
      -if !(@answers.blank?)
        - @answers.each do |answer|
          %li.question-item
            .col-md-8.q-left-content
              .q-ltop-content.title-answer-style
                %a.question-title
                  = link_to  answer.question.title, question_path(answer.question),class: 'question-title', 'data-no-turbolink' => true
              .q-lbtm-content
                .question-cat
                  %span.avatar
                    = image_tag answer.answerable.avatar.url(:medium), alt: t('common.image.alt') ,class: 'img-circle user-thumb-img'
                  %span.user-badge
                    - if answer.answerable.badges.last.blank?
                    -else
                      = answer.answerable.badges.last.name
                  %span.question-time
                    = "Asked #{time_ago_in_words(answer.question.created_at)} ago."
                  %ul.question-tags
                    - answer.question.tags.each do |tag|
                      %li
                        = link_to tag, questions_path(tag: tag.name),class: 'q-tag'
              .quote-answer-style
                %div
                  %span.icon-quote
                  = raw(answer.content)
                %p.alert-stt-answer-style
                  %i.fa.fa-check-circle
                  = "Replied #{time_ago_in_words(answer.created_at)} ago."
            
            / end left content
            .col-md-4.q-right-content
              %ul.question-statistic
                %li
                  %span.question-views
                    = "#{answer.question.impressionist_count}"
                  views
                %li.active
                  %span.question-answers
                    = "#{answer.question.answers.count}"
                  answers
                %li
                  %span.question-upvotes
                    = answer.question.get_upvotes.size
                  Upvotes
                %li
                  %span.question-downvotes
                    = answer.question.get_downvotes.size
                  Downvotes  
      - else
        .spacer50
        .col-md-2
        .col-md-6.col-xs-12
          %h4
            = @student.username
            don't  have answered any question yet
- elsif params[:active_tab] == "edit-profile"
  = render 'form'
-elsif params[:active_tab] == t('students.active_tab.bookmarks')
  - question_list = bookmark_question_ids @student
  - if !(question_list.blank?)
    = render :partial => 'questions/questions_list', :locals => { questions: question_list}
  - else
    .spacer50
    .col-md-2
    .col-md-6.col-xs-12
      %h4
        = @student.username 
        don't have Bookmarked any Question
- elsif params[:active_tab] == t('students.active_tab.tags')
  .main-questions-list
    %ul#main_questions_list
      -if !(@tags.blank?)
        .main-tag-list
          .wrap-tag-list   
            %ul.raw.tag-list
              - @tags.each do |tag|
                = render partial: "tags/tag_links", :locals => {:tag => tag}
            .row.paginations.home
              .col-md-12
                =paginate @tags            
      - else
        .spacer50
        .col-md-2
        .col-md-6.col-xs-12
          %h4
            = @student.username
            You haven't tagged any thing yet!!!
- elsif params[:active_tab] == t('students.active_tab.badges')
  .main-questions-list
    %ul#main_questions_list.single-head
      - if !(@student.badges.last.blank?)
        .col-md-12.badge-content
          = render '/badges/badge_list'
      -else
        .spacer50
        .col-md-2
        .col-md-6.col-xs-12
          %h4
            = @student.username
            haven't earned any Badges!!!
- elsif params[:active_tab] == "questions"
  .main-questions-list    
    %ul#main_questions_list
      - if !(@questions.blank?)
        - @questions.each do |question|
          %li.post-188.question.type-question.status-publish.hentry.question-item{"data-id" => "188"}
            .col-md-8.col-xs-8.q-left-content
              .q-ltop-content
                %a.question-title
                  = link_to  question.title, question_path(question),class: 'question-title', 'data-no-turbolink' => true
              .q-lbtm-content
                .question-excerpt
                  %p 
                    = raw(question.content)
                .question-cat
                  %ul.question-tags
                    - question.tags.each do |tag|
                      %li
                        = link_to tag, questions_path(tag: tag.name),class: 'q-tag'   
                  .clearfix
                  %a{:href => '#'}
                    %span.avatar
                      = image_tag question.askable.avatar.url(:medium), alt: t('common.image.alt') ,class: 'img-circle user-thumb-img'
                    %span.author-name 
                      = question.askable.username
                  %span.user-badge
                    - if question.askable.badges.last.blank?
                    - else 
                      = question.askable.badges.last.name  
                  %span.question-time
                    = "#{time_ago_in_words(question.created_at)} ago."
            / end left content
            .col-md-4.col-xs-4.q-right-content
              %ul.question-statistic
                %li
                  %span.question-views
                    = "#{question.impressionist_count}"
                  views
                %li.active
                  %span.question-answers
                    = "#{question.answers.count}" 
                  answers
                %li
                  %span.question-upvotes
                    = question.get_upvotes.size
                  upvotes
                %li
                  %span.question-downvotes
                    = question.get_downvotes.size                      
                  downvotes
            / end right content
      - else
        .spacer50
        .col-md-2
        .col-md-6.col-xs-12
          %h4
            = @student.username 
            don't have asked any questions yet
- else
  .modal-submit-questions
    .modal-dialog
      .modal-body
        = form_for(resource, :as => resource_name, :url => student_registration_path) do |f|
          %br
          = f.label t('common.captions.user_name')
          = f.text_field :username,class: 'form-control', disabled: true
          %br
          = f.label t('common.captions.dob')
          = f.text_field :birthdate,class: 'form-control date-picker', id: 'datepicker1', disabled: true
          %br
          = f.label t('common.captions.email')
          = f.email_field :email, :autofocus => true,class: 'form-control', disabled: true
          %br/